/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package aoc

import aoc.day01.Day01

class App {
    private val days: Map<Int, Day> = mapOf(
            1 to Day01()
    )

    private fun loadInput(day: Int): List<String> {
        val paddedDay: String = day.toString().padStart(2, '0')
        val fileName = "day$paddedDay.txt"
        return ClassLoader.getSystemResourceAsStream(fileName)
                .bufferedReader()
                .readLines();
    }

    fun exec(day: Int = 1, part: Int = 1): String {
        val input = loadInput(day)

        if (part == 1) return days[day]?.part1(input) ?: ""
        if (part == 2) return days[day]?.part2(input) ?: ""
        throw IllegalArgumentException("Only 2-part puzzles are implemented.")
    }

}
fun main(args: Array<String>) {
    val day = if (args.isEmpty()) 1 else args[0].toInt()
    val part = if (args.size <= 1) 1 else args[1].toInt()

    println(App().exec(day, part))
}
